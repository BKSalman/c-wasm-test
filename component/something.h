// Generated by `wit-bindgen` 0.26.0. DO NOT EDIT!
#ifndef __BINDINGS_SOMETHING_H
#define __BINDINGS_SOMETHING_H
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>
#include <stdbool.h>

typedef struct something_string_t {
  uint8_t*ptr;
  size_t len;
} something_string_t;

// A log level, describing a kind of message.
typedef uint8_t wasi_logging_logging_level_t;

// Describes messages about the values of variables and the flow of
// control within a program.
#define WASI_LOGGING_LOGGING_LEVEL_TRACE 0
// Describes messages likely to be of interest to someone debugging a
// program.
#define WASI_LOGGING_LOGGING_LEVEL_DEBUG 1
// Describes messages likely to be of interest to someone monitoring a
// program.
#define WASI_LOGGING_LOGGING_LEVEL_INFO 2
// Describes messages indicating hazardous situations.
#define WASI_LOGGING_LOGGING_LEVEL_WARN 3
// Describes messages indicating serious errors.
#define WASI_LOGGING_LOGGING_LEVEL_ERROR 4
// Describes messages indicating fatal errors.
#define WASI_LOGGING_LOGGING_LEVEL_CRITICAL 5

// Imported Functions from `wasi:logging/logging`
// Emit a log message.
// 
// A log message has a `level` describing what kind of message is being
// sent, a context, which is an uninterpreted string meant to help
// consumers group similar messages, and a string containing the message
// text.
extern void wasi_logging_logging_log(wasi_logging_logging_level_t level, something_string_t *context, something_string_t *message);

// Imported Functions from `component:wasm-app/wow@0.1.0`
extern void component_wasm_app_wow_hello_world(something_string_t *ret);
extern int32_t component_wasm_app_wow_add(int32_t a, int32_t b);

// Exported Functions from `something`
void something_start(void);

// Helper Functions

// Transfers ownership of `s` into the string `ret`
void something_string_set(something_string_t *ret, const char*s);

// Creates a copy of the input nul-terminate string `s` and
// stores it into the component model string `ret`.
void something_string_dup(something_string_t *ret, const char*s);

// Deallocates the string pointed to by `ret`, deallocating
// the memory behind the string.
void something_string_free(something_string_t *ret);

#ifdef __cplusplus
}
#endif
#endif
